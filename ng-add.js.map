{"version":3,"file":"ng-add.js","sourceRoot":"","sources":["../ng-add.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAAkD;AAClD,2DAIoC;AACpC,mCAAqC;AAM9B,MAAM,KAAK,GAAG,CAAC,OAAqB,EAAE,EAAE,CAAC,CAC9C,IAAU,EACV,QAA0B,EAC1B,EAAE;;IACF,MAAM,IAAI,GAAG,IAAA,kBAAU,EAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,iBAAU,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAEhE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YAElC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,gCAAmB,CAC3B,8GAA8G,CAC/G,CAAC;QACJ,CAAC;IACH,CAAC;IAED,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACxD,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,gCAAmB,CAC3B,gEAAgE,CACjE,CAAC;IACJ,CAAC;IAED,IAAI,OAAO,CAAC,UAAU,CAAC,WAAW,KAAK,aAAa,EAAE,CAAC;QACrD,MAAM,IAAI,gCAAmB,CAC3B,0EAA0E,CAC3E,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,CAAA,MAAA,MAAA,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,0CAAE,OAAO,0CAAE,UAAU,CAAA,EAAE,CAAC;QACvD,MAAM,IAAI,gCAAmB,CAC3B,4FAA4F,OAAO,CAAC,OAAO,mBAAmB,CAC/H,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;QAClB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,4BAA4B;QACrC,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IAEH,iBAAU,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC3C,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AA7CW,QAAA,KAAK,SA6ChB","sourcesContent":["import { workspaces } from '@angular-devkit/core';\r\nimport {\r\n  SchematicContext,\r\n  SchematicsException,\r\n  Tree\r\n} from '@angular-devkit/schematics';\r\nimport { createHost } from './utils';\r\n\r\ninterface NgAddOptions {\r\n  project: string;\r\n}\r\n\r\nexport const ngAdd = (options: NgAddOptions) => async (\r\n  tree: Tree,\r\n  _context: SchematicContext\r\n) => {\r\n  const host = createHost(tree);\r\n  const { workspace } = await workspaces.readWorkspace('/', host);\r\n\r\n  if (!options.project) {\r\n    if (workspace.projects.size === 1) {\r\n      // If there is only one project, return that one.\r\n      options.project = Array.from(workspace.projects.keys())[0];\r\n    } else {\r\n      throw new SchematicsException(\r\n        'There is more than one project in your workspace. Please select it manually by using the --project argument.'\r\n      );\r\n    }\r\n  }\r\n\r\n  const project = workspace.projects.get(options.project);\r\n  if (!project) {\r\n    throw new SchematicsException(\r\n      'The specified Angular project is not defined in this workspace'\r\n    );\r\n  }\r\n\r\n  if (project.extensions.projectType !== 'application') {\r\n    throw new SchematicsException(\r\n      `Deploy requires an Angular project type of \"application\" in angular.json`\r\n    );\r\n  }\r\n\r\n  if (!project.targets.get('build')?.options?.outputPath) {\r\n    throw new SchematicsException(\r\n      `Cannot read the output path (architect.build.options.outputPath) of the Angular project \"${options.project}\" in angular.json`\r\n    );\r\n  }\r\n\r\n  project.targets.add({\r\n    name: 'deploy',\r\n    builder: 'angular-cli-ghpages:deploy',\r\n    options: {}\r\n  });\r\n\r\n  workspaces.writeWorkspace(workspace, host);\r\n  return tree;\r\n};\r\n"]}